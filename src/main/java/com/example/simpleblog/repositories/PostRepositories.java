package com.example.simpleblog.repositories;

import com.example.simpleblog.models.Post;
import org.springframework.data.repository.CrudRepository;

/**
 *  JPA — это спецификация, нужен инструмент для ее реализации.
 *  Hibernate — это одна из самых популярных реализаций этой спецификации
 *      
 *  Spring Data JPA — это библиотека, которая добавляет дополнительный уровень абстракции поверх ORM реализации JPA.
 *      По умолчанию Spring Data JPA использует Hibernate, в качестве ORM провайдера (чтобы выполнять запросы).
 *      Используя Spring Boot вместе с Spring Data JPA, мы имеем все необходимые настройки подключения
 *      Java приложения к базе данных “из коробки”
 *
 *  Основное понятие в Spring Data JPA— это репозиторий,
 *      который является неким аналогом слоя DAO в Spring Jdbc Template
 *      Основная часть работы строится вокруг интерфейса Repository. Это маркерный интерфейс.
 *      От него наследуются интерфейсы-специализации, которые уже содержат методы для работы с сущностями базы данных.
 *      Все эти интерфейсы параметризуются двумя типами: самой сущности и её идентификатора.
 *
 *  CrudRepository – базовый набор операций над сущностями: создание, чтение, изменение и удаление (CRUD).
 *      Т.е. если того перечня что предоставляет интерфейс достаточно для взаимодействия с сущностью,
 *      то можно прямо расширить базовый интерфейс для своей сущности, дополнить его своими методами запросов
 *      и выполнять операции.
 *  PagingAndSortingRepository – добавляет к CRUD возможность постраничной загрузки данных с определенной сортировкой
 *      предоставляет методы для разбиения на страницы и сортировки записей
 *  JpaRepository – расширение PagingAndSortingRepository, полноценно реализующее Java Persistence API.
 *      Добавляет ряд методов, таких как например flush и deleteInBatch.
 *      методы, такие как очистка контекста сохраняемости и удаление записей в пакете.
 *  MongoRepository – расширение PagingAndSortingRepository, специфичное для MongoDB.
 */

public interface PostRepositories extends CrudRepository<Post, Long> {
}
